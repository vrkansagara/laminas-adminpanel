<!-- Filename: module/Blog/view/blog/write/add.phtml -->
<h1>Add a blog post</h1>
<!-- Javascript Requirements -->
<!--<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>-->
<!--<script type="text/javascript" src="http://127.0.0.1:8000/vendor/jsvalidation/js/jsvalidation.js"></script>-->

<?php
$form = $this->form;
$form->setAttribute('action', $this->url());
echo $this->partial('blog/write/form', [
    'form' => $form,
    'submitLabel' => 'Insert new post',
]);

?>

<script>
    function validate(e, singleForm) {
        console.log('Submit button pressed.');
        // e.stop();
        form = getElement(singleForm);
        formName = form.name;
        formMethod = form.method;
        formActionUrl = form.action;
        formElements = form.elements;
        formSubmit = form.submit;
        formEncoding = form.encoding;
        formReset = form.reset;
        formTagsToValidate = {input: ['submit', 'hidden', 'text']};
        rules = {
            "post[title]": {
                "laminasValidation": [
                    "The email field is required.",
                    "The email must be a string."
                ]
            },
            "post[text]": {
                "laminasValidation": [
                    "The password field is required.",
                    "The password must be a string."
                ]
            }
        };
        forEach(form, function (element) {
            console.log("element.type ==>" + element.type + "    element.tagName ==>  " + element.tagName.toLowerCase());
            if(elementRules = rules[element.name]){
                var span = createDOM('span', {'style': 'display:block','id':'email-erorr','class':'invalid-feedback'},'The email field is required.');
                insertSiblingNodesAfter(element, span);

            }

        });
    }

    connect(window, 'onload', function () {
        var formLists = getElement(['postform']);
        forEach(formLists, function (singleForm) {
            var form = getElement(singleForm);
            connect(form.submit, 'onclick', function (e) {
                validate(e, form)
            });
        })
    });


    // connect('postform', 'onclick', function(e) {  debugger; e.stop(); });

    // $(document).ready(function(){
    //
    //     $("#postform").each(function() {
    //         $(this).validate({
    //             errorElement: 'span',
    //             errorClass: 'invalid-feedback',
    //
    //             errorPlacement: function (error, element) {
    //                 if (element.parent('.input-group').length ||
    //                     element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
    //                     error.insertAfter(element.parent());
    //                     // else just place the validation message immediately after the input
    //                 } else {
    //                     error.insertAfter(element);
    //                 }
    //             },
    //             highlight: function (element) {
    //                 $(element).closest('.form-control').removeClass('is-valid').addClass('is-invalid'); // add the Bootstrap error class to the control group
    //             },
    //
    //
    //
    //             unhighlight: function(element) {
    //                 $(element).closest('.form-control').removeClass('is-invalid').addClass('is-valid');
    //             },
    //
    //             success: function (element) {
    //                 $(element).closest('.form-control').removeClass('is-invalid').addClass('is-valid'); // remove the Boostrap error class from the control group
    //             },
    //
    //             focusInvalid: false, // do not focus the last invalid input
    //
    //             rules: {
    //                 "post[title]": {"laravelValidation": [["Required", [], "The email field is required.", true], ["String", [], "The email must be a string.", false]]},
    //                 "post[text]": {"laravelValidation": [["Required", [], "The password field is required.", true], ["String", [], "The password must be a string.", false]]}
    //             }
    //         });
    //     });
    // });
</script>

